package model.bean;

// Generated 2016/12/10 13:51:52 by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", catalog = "chrismaspresent")
public class User implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer id;
	private String email;
	private String password;
	private String name;
	private Date birthday;
	private String avatarPath;
	private String address;
	private Boolean type;
	private Date createDate;
	private Date updateDate;
	private Set<Message> messagesForChildId = new HashSet<Message>(0);
	private Set<Message> messagesForParentId = new HashSet<Message>(0);

	public User() {
	}

	public User(String email, String password, String name) {
		this.email = email;
		this.password = password;
		this.name = name;
	}

	public User(String email, String password, String name, Date birthday,
			String avatarPath, String address, Boolean type, Date createDate,
			Date updateDate, Set<Message> messagesForChildId,
			Set<Message> messagesForParentId) {
		this.email = email;
		this.password = password;
		this.name = name;
		this.birthday = birthday;
		this.avatarPath = avatarPath;
		this.address = address;
		this.type = type;
		this.createDate = createDate;
		this.updateDate = updateDate;
		this.messagesForChildId = messagesForChildId;
		this.messagesForParentId = messagesForParentId;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "email", nullable = false)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "password", nullable = false)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "name", nullable = false)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "birthday", length = 10)
	public Date getBirthday() {
		return this.birthday;
	}

	public void setBirthday(Date birthday) {
		this.birthday = birthday;
	}

	@Column(name = "avatar_path")
	public String getAvatarPath() {
		return this.avatarPath;
	}

	public void setAvatarPath(String avatarPath) {
		this.avatarPath = avatarPath;
	}

	@Column(name = "address")
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "type")
	public Boolean getType() {
		return this.type;
	}

	public void setType(Boolean type) {
		this.type = type;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_date", length = 19)
	public Date getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "update_date", length = 19)
	public Date getUpdateDate() {
		return this.updateDate;
	}

	public void setUpdateDate(Date updateDate) {
		this.updateDate = updateDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userByChildId")
	public Set<Message> getMessagesForChildId() {
		return this.messagesForChildId;
	}

	public void setMessagesForChildId(Set<Message> messagesForChildId) {
		this.messagesForChildId = messagesForChildId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userByParentId")
	public Set<Message> getMessagesForParentId() {
		return this.messagesForParentId;
	}

	public void setMessagesForParentId(Set<Message> messagesForParentId) {
		this.messagesForParentId = messagesForParentId;
	}

}
